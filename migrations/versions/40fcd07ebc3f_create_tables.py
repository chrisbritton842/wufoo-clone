"""create tables

Revision ID: 40fcd07ebc3f
Revises:
Create Date: 2022-04-13 20:31:11.377750

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import os
environment = os.getenv("FLASK_ENV")
SCHEMA = os.environ.get("SCHEMA")

# revision identifiers, used by Alembic.
revision = '40fcd07ebc3f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=40), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('forms',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('form_url', sa.String(length=255), nullable=True),
    sa.Column('title', sa.String(length=255), nullable=True),
    sa.Column('field_type', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('field_labels', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('input_labels', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('all_entries', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('entries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('email', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('number', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('telephone', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('text', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('textarea', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('url', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('form_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['form_id'], ['forms.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    if environment == "production":
        op.execute(f"ALTER TABLE 'users' SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE 'forms' SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE 'entries' SET SCHEMA {SCHEMA};")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('entries')
    op.drop_table('forms')
    op.drop_table('users')
    # ### end Alembic commands ###
